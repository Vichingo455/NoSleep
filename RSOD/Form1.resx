<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>